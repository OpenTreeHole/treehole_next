basePath: /api
definitions:
  common.ErrorDetailElement:
    properties:
      field:
        type: string
      message:
        type: string
      param:
        type: string
      struct_field:
        type: string
      tag:
        type: string
      value: {}
    type: object
  common.HttpError:
    properties:
      code:
        type: integer
      detail:
        items:
          $ref: '#/definitions/common.ErrorDetailElement'
        type: array
      message:
        type: string
    type: object
  division.CreateModel:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  division.DeleteModel:
    properties:
      to:
        default: 1
        description: |-
          Admin only
          ID of the target division that all the deleted division's holes will be moved to
        type: integer
    type: object
  division.ModifyDivisionModel:
    properties:
      description:
        type: string
      name:
        type: string
      pinned:
        items:
          type: integer
        type: array
    type: object
  favourite.AddFavoriteGroupModel:
    properties:
      name:
        maxLength: 64
        type: string
    required:
    - name
    type: object
  favourite.AddModel:
    properties:
      favorite_group_id:
        default: 0
        type: integer
      hole_id:
        type: integer
    type: object
  favourite.DeleteFavoriteGroupModel:
    properties:
      favorite_group_id:
        type: integer
    required:
    - favorite_group_id
    type: object
  favourite.DeleteModel:
    properties:
      favorite_group_id:
        default: 0
        type: integer
      hole_id:
        type: integer
    type: object
  favourite.ModifyFavoriteGroupModel:
    properties:
      favorite_group_id:
        type: integer
      name:
        maxLength: 64
        type: string
    required:
    - favorite_group_id
    - name
    type: object
  favourite.ModifyModel:
    properties:
      favorite_group_id:
        default: 0
        type: integer
      hole_ids:
        items:
          type: integer
        type: array
    type: object
  favourite.MoveModel:
    properties:
      from_favorite_group_id:
        default: 0
        type: integer
      hole_ids:
        items:
          type: integer
        type: array
      to_favorite_group_id:
        type: integer
    required:
    - from_favorite_group_id
    - to_favorite_group_id
    type: object
  favourite.Response:
    properties:
      data:
        items:
          type: integer
        type: array
      message:
        type: string
    type: object
  floor.BanDivision:
    additionalProperties:
      type: string
    type: object
  floor.CreateModel:
    properties:
      content:
        type: string
      reply_to:
        description: id of the floor to which replied
        minimum: 0
        type: integer
      special_tag:
        description: Admin and Operator only
        maxLength: 16
        type: string
    required:
    - content
    type: object
  floor.CreateOldModel:
    properties:
      content:
        type: string
      hole_id:
        minimum: 1
        type: integer
      reply_to:
        description: id of the floor to which replied
        minimum: 0
        type: integer
      special_tag:
        description: Admin and Operator only
        maxLength: 16
        type: string
    required:
    - content
    type: object
  floor.CreateOldResponse:
    properties:
      data:
        $ref: '#/definitions/models.Floor'
      message:
        type: string
    type: object
  floor.DeleteModel:
    properties:
      delete_reason:
        maxLength: 32
        type: string
    type: object
  floor.ModifyModel:
    properties:
      content:
        description: Owner or admin, the original content should be moved to  floor_history
        type: string
      fold:
        description: 仅管理员，留空则重置，低优先级
        items:
          type: string
        type: array
      fold_v2:
        description: 仅管理员，留空则重置，高优先级
        maxLength: 64
        type: string
      like:
        description: All user, deprecated, "add" is like, "cancel" is reset
        enum:
        - add
        - cancel
        type: string
      special_tag:
        description: Admin and Operator only
        maxLength: 16
        type: string
    type: object
  floor.ModifySensitiveFloorRequest:
    properties:
      is_actual_sensitive:
        type: boolean
    type: object
  floor.RestoreModel:
    properties:
      restore_reason:
        maxLength: 32
        type: string
    required:
    - restore_reason
    type: object
  floor.SearchConfigModel:
    properties:
      open:
        type: boolean
    type: object
  floor.SensitiveFloorResponse:
    properties:
      content:
        type: string
      deleted:
        type: boolean
      hole_id:
        type: integer
      id:
        type: integer
      is_actual_sensitive:
        type: boolean
      modified:
        type: integer
      sensitive_detail:
        type: string
      time_created:
        type: string
      time_updated:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  hole.CreateModel:
    properties:
      content:
        type: string
      special_tag:
        description: Admin and Operator only
        maxLength: 16
        type: string
      tags:
        description: All users
        items:
          $ref: '#/definitions/tag.CreateModel'
        maxItems: 10
        minItems: 1
        type: array
    required:
    - content
    type: object
  hole.CreateOldModel:
    properties:
      content:
        type: string
      division_id:
        default: 1
        minimum: 1
        type: integer
      special_tag:
        description: Admin and Operator only
        maxLength: 16
        type: string
      tags:
        description: All users
        items:
          $ref: '#/definitions/tag.CreateModel'
        maxItems: 10
        minItems: 1
        type: array
    required:
    - content
    type: object
  hole.CreateOldResponse:
    properties:
      data:
        $ref: '#/definitions/models.Hole'
      message:
        type: string
    type: object
  hole.ModifyModel:
    properties:
      division_id:
        description: Admin and owner only
        minimum: 1
        type: integer
      hidden:
        description: Admin only
        type: boolean
      lock:
        description: admin only
        type: boolean
      tags:
        description: All users
        items:
          $ref: '#/definitions/tag.CreateModel'
        maxItems: 10
        minItems: 1
        type: array
      unhidden:
        description: admin only
        type: boolean
    type: object
  message.CreateModel:
    properties:
      description:
        description: MessageTypeMail
        type: string
      recipients:
        items:
          type: integer
        type: array
    required:
    - recipients
    type: object
  models.Division:
    properties:
      description:
        type: string
      division_id:
        description: / generated field
        type: integer
      hidden:
        type: boolean
      id:
        description: / saved fields
        type: integer
      name:
        description: / base info
        type: string
      pinned:
        description: return pinned hole to frontend
        items:
          $ref: '#/definitions/models.Hole'
        type: array
      time_created:
        type: string
      time_updated:
        type: string
    type: object
  models.FavoriteGroup:
    properties:
      count:
        type: integer
      deleted:
        type: boolean
      favorite_group_id:
        type: integer
      name:
        default: 默认
        type: string
      time_created:
        type: string
      time_updated:
        type: string
      user_id:
        type: integer
    type: object
  models.Floor:
    properties:
      anonyname:
        description: a random username
        type: string
      content:
        description: content of the floor, no more than 15000, should be sensitive
          checked, no more than 10000 in frontend
        type: string
      deleted:
        description: whether the floor is deleted
        type: boolean
      dislike:
        description: dislike number
        type: integer
      disliked:
        description: whether the user has disliked the floor
        type: boolean
      floor_id:
        description: old version compatibility
        type: integer
      fold:
        description: fold reason, for v1
        items:
          type: string
        type: array
      fold_v2:
        description: fold reason
        type: string
      hole_id:
        description: the hole it belongs to
        type: integer
      id:
        description: / saved fields
        type: integer
      is_actual_sensitive:
        description: manual sensitive check
        type: boolean
      is_me:
        description: whether the user is the author of the floor
        type: boolean
      is_sensitive:
        description: auto sensitive check
        type: boolean
      like:
        description: like number
        type: integer
      liked:
        description: whether the user has liked the floor
        type: boolean
      mention:
        description: many to many mentions
        items:
          $ref: '#/definitions/models.Floor'
        type: array
      modified:
        description: the modification times of floor.content
        type: integer
      ranking:
        description: the ranking of this floor in the hole
        type: integer
      reply_to:
        description: floor_id that it replies to, for dialog mode, in the same hole
        type: integer
      sensitive_detail:
        description: auto sensitive check detail
        type: string
      special_tag:
        description: additional info, like "树洞管理团队"
        type: string
      time_created:
        type: string
      time_updated:
        type: string
    type: object
  models.FloorHistory:
    properties:
      content:
        type: string
      floor_id:
        type: integer
      id:
        description: / base info
        type: integer
      is_actual_sensitive:
        description: manual sensitive check
        type: boolean
      is_sensitive:
        description: auto sensitive check
        type: boolean
      reason:
        type: string
      sensitive_detail:
        type: string
      time_created:
        type: string
      time_updated:
        type: string
      user_id:
        description: The one who modified the floor
        type: integer
    type: object
  models.Hole:
    properties:
      division_id:
        description: 所属 division 的 id
        type: integer
      floors:
        description: 返回给前端的楼层列表，包括首楼、尾楼和预加载的前 n 个楼层
        properties:
          first_floor:
            allOf:
            - $ref: '#/definitions/models.Floor'
            description: 首楼
          last_floor:
            allOf:
            - $ref: '#/definitions/models.Floor'
            description: 尾楼
          prefetch:
            description: 预加载的楼层
            items:
              $ref: '#/definitions/models.Floor'
            type: array
        type: object
      good:
        type: boolean
      hidden:
        description: 是否隐藏，隐藏的洞用户不可见，管理员可见
        type: boolean
      hole_id:
        description: 兼容旧版 id
        type: integer
      id:
        description: / saved fields
        type: integer
      locked:
        description: 锁定帖子，如果锁定则非管理员无法发帖，也无法修改已有发帖
        type: boolean
      no_purge:
        type: boolean
      reply:
        description: 回复量（即该洞下 floor 的数量 - 1）
        type: integer
      tags:
        description: tag 列表；不超过 10 个
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      time_created:
        type: string
      time_deleted:
        $ref: '#/definitions/gorm.DeletedAt'
      time_updated:
        type: string
      view:
        description: 浏览量
        type: integer
    type: object
  models.Map:
    additionalProperties: true
    type: object
  models.Message:
    properties:
      code:
        $ref: '#/definitions/models.MessageType'
      data: {}
      description:
        type: string
      has_read:
        description: 兼容旧版, 永远为false，以MessageUser的HasRead为准
        type: boolean
      id:
        type: integer
      message:
        type: string
      message_id:
        description: 兼容旧版 id
        type: integer
      time_created:
        type: string
      time_updated:
        type: string
      url:
        type: string
    type: object
  models.MessageModel:
    properties:
      message:
        type: string
    type: object
  models.MessageType:
    enum:
    - favorite
    - reply
    - mention
    - modify
    - permission
    - report
    - report_dealt
    - mail
    - sensitive
    type: string
    x-enum-comments:
      MessageTypeModify: including fold and delete
    x-enum-varnames:
    - MessageTypeFavorite
    - MessageTypeReply
    - MessageTypeMention
    - MessageTypeModify
    - MessageTypePermission
    - MessageTypeReport
    - MessageTypeReportDealt
    - MessageTypeMail
    - MessageTypeSensitive
  models.Punishment:
    properties:
      created_at:
        description: time when this punishment creates
        type: string
      day:
        type: integer
      division:
        allOf:
        - $ref: '#/definitions/models.Division'
        description: foreign key
      division_id:
        type: integer
      duration:
        type: integer
      end_time:
        description: end_time of this punishment
        type: string
      floor:
        allOf:
        - $ref: '#/definitions/models.Floor'
        description: foreign key
      floor_id:
        description: punished because of this floor
        type: integer
      id:
        type: integer
      made_by:
        description: admin user_id who made this punish
        type: integer
      reason:
        description: reason
        type: string
      start_time:
        description: |-
          start from end_time of previous punishment (punishment accumulation of different floors)
          if no previous punishment or previous punishment end time less than time.Now() (synced), set start time time.Now()
        type: string
      updated_at:
        type: string
      user_id:
        description: user punished
        type: integer
    type: object
  models.Report:
    properties:
      dealt:
        description: the report has been dealt
        type: boolean
      dealt_by:
        description: who dealt the report
        type: integer
      floor:
        $ref: '#/definitions/models.Floor'
      floor_id:
        type: integer
      hole_id:
        type: integer
      id:
        type: integer
      reason:
        type: string
      report_id:
        type: integer
      result:
        description: deal result
        type: string
      time_created:
        type: string
      time_updated:
        type: string
    type: object
  models.Tag:
    properties:
      id:
        description: / saved fields
        type: integer
      name:
        description: / base info
        type: string
      nsfw:
        type: boolean
      tag_id:
        description: / generated field
        type: integer
      temperature:
        type: integer
    type: object
  models.User:
    properties:
      config:
        $ref: '#/definitions/models.UserConfig'
      default_special_tag:
        type: string
      favorite_group_count:
        type: integer
      has_answered_questions:
        type: boolean
      id:
        description: / base info
        type: integer
      is_admin:
        description: get from jwt
        type: boolean
      joined_time:
        type: string
      nickname:
        type: string
      permission:
        properties:
          admin:
            description: 管理员权限到期时间
            type: string
          offense_count:
            type: integer
          silent:
            additionalProperties:
              type: string
            description: 'key: division_id value: 对应分区禁言解除时间'
            type: object
        type: object
      special_tags:
        items:
          type: string
        type: array
      user_id:
        type: integer
    type: object
  models.UserConfig:
    properties:
      notify:
        description: used when notify
        items:
          type: string
        type: array
      show_folded:
        description: |-
          对折叠内容的处理
          fold 折叠, hide 隐藏, show 展示
        type: string
    type: object
  penalty.ForeverPostBody:
    properties:
      reason:
        description: optional
        type: string
    type: object
  penalty.PostBody:
    properties:
      days:
        description: high priority
        minimum: 1
        type: integer
      divisions:
        description: high priority
        items:
          type: integer
        minItems: 1
        type: array
      penalty_level:
        description: low priority, deprecated
        type: integer
      reason:
        description: optional
        type: string
    type: object
  report.AddModel:
    properties:
      floor_id:
        type: integer
      reason:
        maxLength: 128
        type: string
    required:
    - floor_id
    - reason
    type: object
  report.DeleteModel:
    properties:
      result:
        description: The deal result, send it to reporter
        maxLength: 128
        type: string
    required:
    - result
    type: object
  report.Range:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - RangeNotDealt
    - RangeDealt
    - RangeAll
  report.banBody:
    properties:
      days:
        minimum: 1
        type: integer
      reason:
        description: optional
        type: string
    type: object
  subscription.AddModel:
    properties:
      hole_id:
        type: integer
    type: object
  subscription.DeleteModel:
    properties:
      hole_id:
        type: integer
    type: object
  subscription.Response:
    properties:
      data:
        items:
          type: integer
        type: array
      message:
        type: string
    type: object
  tag.CreateModel:
    properties:
      name:
        description: Admin only
        maxLength: 20
        type: string
    type: object
  tag.DeleteModel:
    properties:
      to:
        description: |-
          Admin only
          Name of the target tag that all the deleted tag's holes will be connected to
        type: string
    type: object
  tag.ModifyModel:
    properties:
      name:
        description: Admin only
        maxLength: 20
        type: string
      temperature:
        description: Admin only
        type: integer
    type: object
  user.ModifyModel:
    properties:
      config:
        $ref: '#/definitions/user.UserConfigModel'
      nickname:
        minLength: 1
        type: string
    type: object
  user.UserConfigModel:
    properties:
      notify:
        items:
          type: string
        type: array
      show_folded:
        type: string
    type: object
info:
  contact:
    email: dev@danta.tech
    name: Maintainer Ke Chen
  description: 'An Anonymous BBS \n Note: PUT methods are used to PARTLY update, and
    we don''t use PATCH method.'
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Open Tree Hole
  version: 2.1.0
paths:
  /:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MessageModel'
  /config/search:
    post:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/floor.SearchConfigModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Map'
      summary: change search config
      tags:
      - Search
  /divisions:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Division'
            type: array
      summary: List All Divisions
      tags:
      - Division
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/division.CreateModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Division'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Division'
      summary: Add A Division
      tags:
      - Division
  /divisions/{division_id}/holes:
    get:
      parameters:
      - description: division_id
        in: path
        name: division_id
        required: true
        type: integer
      - description: updated time < offset (default is now)
        in: query
        name: offset
        type: string
      - in: query
        name: order
        type: string
      - default: 10
        in: query
        maximum: 10
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Hole'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: List Holes In A Division
      tags:
      - Hole
    post:
      description: Create a hole, create tags and floor binding to it and set the
        name mapping
      parameters:
      - description: division id
        in: path
        name: division_id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/hole.CreateModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Hole'
      summary: Create A Hole
      tags:
      - Hole
  /divisions/{id}:
    delete:
      description: Delete a division and move all of its holes to another given division
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/division.DeleteModel'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Delete A Division
      tags:
      - Division
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Division'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Get Division
      tags:
      - Division
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/division.ModifyDivisionModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Division'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Division
      tags:
      - Division
  /divisions/{id}/_webvpn:
    patch:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/division.ModifyDivisionModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Division'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Division
      tags:
      - Division
  /floors:
    get:
      deprecated: true
      parameters:
      - in: query
        name: hole_id
        type: integer
      - in: query
        maximum: 50
        minimum: 0
        name: length
        type: integer
      - in: query
        name: s
        type: string
      - in: query
        name: start_floor
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Floor'
            type: array
      summary: Old API for Listing Floors
      tags:
      - Floor
    post:
      deprecated: true
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/floor.CreateOldModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/floor.CreateOldResponse'
      summary: Old API for Creating A Floor
      tags:
      - Floor
  /floors/_sensitive:
    get:
      parameters:
      - in: query
        name: all
        type: boolean
      - in: query
        name: offset
        type: string
      - in: query
        name: open
        type: boolean
      - default: time_created
        enum:
        - time_created
        - time_updated
        in: query
        name: order_by
        type: string
      - default: 10
        in: query
        maximum: 10
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/floor.SensitiveFloorResponse'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: List sensitive floors, admin only
      tags:
      - Floor
  /floors/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/floor.DeleteModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Floor'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Delete A Floor
      tags:
      - Floor
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Floor'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Get A Floor
      tags:
      - Floor
    put:
      description: when both "fold_v2" and "fold" are empty, reset fold; else, "fold_v2"
        has the priority
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/floor.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Floor'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Floor
      tags:
      - Floor
  /floors/{id}/_sensitive:
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/floor.ModifySensitiveFloorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Floor'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Floor's actual_sensitive, admin only
      tags:
      - Floor
  /floors/{id}/_sensitive/_webvpn:
    patch:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/floor.ModifySensitiveFloorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Floor'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Floor's actual_sensitive, admin only
      tags:
      - Floor
  /floors/{id}/_webvpn:
    patch:
      description: when both "fold_v2" and "fold" are empty, reset fold; else, "fold_v2"
        has the priority
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/floor.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Floor'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Floor
      tags:
      - Floor
  /floors/{id}/history:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FloorHistory'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Get A Floor's History, admin only
      tags:
      - Floor
  /floors/{id}/like/{like}:
    post:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: 1 is like, 0 is reset, -1 is dislike
        in: path
        name: like
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Floor'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Floor's like
      tags:
      - Floor
  /floors/{id}/punishment:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Get A Floor's Punishment History, admin only
      tags:
      - Floor
  /floors/{id}/restore/{floor_history_id}:
    post:
      description: Restore A Floor From A History Version
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: floor_history_id
        in: path
        name: floor_history_id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/floor.RestoreModel'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Floor'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Restore A Floor, admin only
      tags:
      - Floor
  /floors/{id}/user_silence:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{''1'': ''2024-05-01T14:42:31.722026326+08:00''}'
          schema:
            $ref: '#/definitions/floor.BanDivision'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/common.HttpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.HttpError'
      summary: Get A User's Silence Status According To FloorID, admin only
      tags:
      - Floor
  /floors/search:
    get:
      parameters:
      - default: false
        description: Accurate is used to determine whether to use accurate search
        in: query
        name: accurate
        type: boolean
      - in: query
        name: end_time
        type: integer
      - default: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - in: query
        name: search
        required: true
        type: string
      - default: 10
        in: query
        minimum: 0
        name: size
        type: integer
      - description: |-
          StartTime and EndTime are used to filter floors by time
          Both are Unix timestamps, and are optional
        in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Floor'
            type: array
      summary: SearchFloors In ElasticSearch
      tags:
      - Search
    post:
      parameters:
      - default: false
        description: Accurate is used to determine whether to use accurate search
        in: query
        name: accurate
        type: boolean
      - in: query
        name: end_time
        type: integer
      - default: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - in: query
        name: search
        required: true
        type: string
      - default: 10
        in: query
        minimum: 0
        name: size
        type: integer
      - description: |-
          StartTime and EndTime are used to filter floors by time
          Both are Unix timestamps, and are optional
        in: query
        name: start_time
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Floor'
            type: array
      summary: SearchFloors In ElasticSearch
      tags:
      - Search
  /holes:
    get:
      parameters:
      - in: query
        name: created_end
        type: string
      - in: query
        name: created_start
        type: string
      - in: query
        name: division_id
        type: integer
      - default: 10
        in: query
        maximum: 10
        name: length
        type: integer
      - in: query
        name: order
        type: string
      - in: query
        name: start_time
        type: string
      - in: query
        name: tag
        type: string
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: tags
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Hole'
            type: array
      summary: API for Listing Holes
      tags:
      - Hole
    post:
      deprecated: true
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/hole.CreateOldModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/hole.CreateOldResponse'
      summary: Old API for Creating A Hole
      tags:
      - Hole
  /holes/_good:
    get:
      parameters:
      - description: updated time < offset (default is now)
        in: query
        name: offset
        type: string
      - in: query
        name: order
        type: string
      - default: 10
        in: query
        maximum: 10
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Hole'
            type: array
      summary: List good holes
      tags:
      - Hole
  /holes/{hole_id}/floors:
    get:
      parameters:
      - description: hole id
        in: path
        name: hole_id
        required: true
        type: integer
      - default: 0
        description: offset of object array
        in: query
        minimum: 0
        name: offset
        type: integer
      - default: id
        description: SQL ORDER BY field
        enum:
        - id
        - like
        in: query
        name: order_by
        type: string
      - default: 30
        description: length of object array
        in: query
        maximum: 50
        minimum: 0
        name: size
        type: integer
      - default: asc
        description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Floor'
            type: array
      summary: List Floors In A Hole
      tags:
      - Floor
    post:
      parameters:
      - description: hole id
        in: path
        name: hole_id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/floor.CreateModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Floor'
      summary: Create A Floor
      tags:
      - Floor
  /holes/{id}:
    delete:
      description: Hide a hole, but visible to admins. This may affect many floors,
        DO NOT ABUSE!!!
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Delete A Hole
      tags:
      - Hole
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Hole'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Get A Hole
      tags:
      - Hole
    patch:
      description: Add hole.view
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Patch A Hole
      tags:
      - Hole
    put:
      description: |-
        Modify a hole, modify tags and set the name mapping
        Only admin can modify division, tags, hidden, lock
        `unhidden` take effect only when hole is hidden and set to true
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/hole.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Hole'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Hole
      tags:
      - Hole
  /holes/{id}/_force:
    delete:
      description: Delete a hole, admin only
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.MessageModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Delete A Hole
      tags:
      - Hole
  /holes/{id}/_webvpn:
    patch:
      description: |-
        Modify a hole, modify tags and set the name mapping
        Only admin can modify division, tags, hidden, lock
        `unhidden` take effect only when hole is hidden and set to true
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/hole.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Hole'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Hole
      tags:
      - Hole
  /messages:
    get:
      parameters:
      - default: false
        in: query
        name: not_read
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Message'
            type: array
      summary: List Messages of a User
      tags:
      - Message
    post:
      description: Send to multiple recipients and save to db, admin only.
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/message.CreateModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Message'
      summary: Send a Mail
      tags:
      - Message
    put:
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Clear Messages Deprecated
      tags:
      - Message
  /messages/_webvpn:
    patch:
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Clear Messages Deprecated
      tags:
      - Message
  /messages/{id}:
    delete:
      parameters:
      - description: message id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a message of a user
      tags:
      - Message
  /messages/clear:
    post:
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Clear Messages of a User
      tags:
      - Message
  /penalty/{floor_id}:
    post:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/penalty.PostBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Ban publisher of a floor
      tags:
      - Penalty
  /penalty/{floor_id}/_forever:
    post:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/penalty.ForeverPostBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Ban publisher of a floor forever
      tags:
      - Penalty
  /reports:
    get:
      parameters:
      - default: 0
        in: query
        minimum: 0
        name: offset
        type: integer
      - default: id
        in: query
        name: orderBy
        type: string
      - description: 'Range, 0: not dealt, 1: dealt, 2: all'
        enum:
        - 0
        - 1
        - 2
        in: query
        name: range
        type: integer
        x-enum-varnames:
        - RangeNotDealt
        - RangeDealt
        - RangeAll
      - default: 30
        in: query
        maximum: 50
        minimum: 0
        name: size
        type: integer
      - default: desc
        description: Sort order, default is desc
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Report'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: List All Reports
      tags:
      - Report
    post:
      description: Add a report and send notification to admins
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/report.AddModel'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.HttpError'
      summary: Add a report
      tags:
      - Report
  /reports/{id}:
    delete:
      description: Mark a report as "dealt" and send notification to reporter
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/report.DeleteModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Report'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.HttpError'
      summary: Deal a report
      tags:
      - Report
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Report'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Get A Report
      tags:
      - Report
  /reports/ban/{id}:
    post:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/report.banBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Ban reporter of a report
      tags:
      - Report
  /tags:
    get:
      parameters:
      - description: search tag by name
        in: query
        maxLength: 32
        name: s
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tag'
            type: array
      summary: List All Tags
      tags:
      - Tag
    post:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/tag.CreateModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Tag'
      summary: Create A Tag
      tags:
      - Tag
  /tags/{id}:
    delete:
      description: Delete a tag and link all of its holes to another given tag
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/tag.DeleteModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Delete A Tag
      tags:
      - Tag
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Get A Tag
      tags:
      - Tag
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/tag.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Tag, admin only
      tags:
      - Tag
  /tags/{id}/_webvpn:
    patch:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/tag.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: Modify A Tag, admin only
      tags:
      - Tag
  /tags/{tag_name}/holes:
    get:
      parameters:
      - description: tag_name
        in: path
        name: tag_name
        required: true
        type: string
      - description: updated time < offset (default is now)
        in: query
        name: offset
        type: string
      - in: query
        name: order
        type: string
      - default: 10
        in: query
        maximum: 10
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Hole'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: List Holes By Tag
      tags:
      - Hole
  /user/favorite_groups:
    delete:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/favourite.DeleteFavoriteGroupModel'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.HttpError'
      summary: Delete A Favorite Group
      tags:
      - Favorite
    get:
      parameters:
      - default: time_created
        enum:
        - id
        - time_created
        - time_updated
        in: query
        name: order
        type: string
      - default: false
        in: query
        name: plain
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FavoriteGroup'
            type: array
      summary: List User's Favorite Groups
      tags:
      - Favorite
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/favourite.AddFavoriteGroupModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/models.FavoriteGroup'
            type: array
      summary: Add A Favorite Group
      tags:
      - Favorite
    put:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/favourite.ModifyFavoriteGroupModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FavoriteGroup'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.HttpError'
      summary: Modify User's Favorite Group
      tags:
      - Favorite
  /user/favorite_groups/_webvpn:
    patch:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/favourite.ModifyFavoriteGroupModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FavoriteGroup'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.HttpError'
      summary: Modify User's Favorite Group
      tags:
      - Favorite
  /user/favorites:
    delete:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/favourite.DeleteModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/favourite.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/favourite.Response'
      summary: Delete A Favorite
      tags:
      - Favorite
    get:
      parameters:
      - in: query
        name: favorite_group_id
        type: integer
      - default: time_created
        enum:
        - id
        - time_created
        - hole_time_updated
        in: query
        name: order
        type: string
      - default: false
        in: query
        name: plain
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Hole'
            type: array
      summary: List User's Favorites
      tags:
      - Favorite
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/favourite.AddModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/favourite.Response'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/favourite.Response'
      summary: Add A Favorite
      tags:
      - Favorite
    put:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/favourite.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/favourite.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/favourite.Response'
      summary: Modify User's Favorites
      tags:
      - Favorite
  /user/favorites/_webvpn:
    patch:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/favourite.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/favourite.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/favourite.Response'
      summary: Modify User's Favorites
      tags:
      - Favorite
  /user/favorites/move:
    put:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/favourite.MoveModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Hole'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/favourite.Response'
      summary: Move User's Favorite
      tags:
      - Favorite
  /users/{id}/punishments:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Punishment'
            type: array
      summary: List punishments by user id
      tags:
      - Penalty
  /users/{user_id}:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: get user by id, owner or admin
      tags:
      - user
    put:
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: modify user
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/user.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: modify user profiles
      tags:
      - User
  /users/{user_id}/_webvpn:
    patch:
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      - description: modify user
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/user.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: modify user profiles
      tags:
      - User
  /users/me:
    get:
      deprecated: true
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: get current user
      tags:
      - user
    put:
      parameters:
      - description: modify user
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/user.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: modify current user profiles
      tags:
      - User
  /users/me/_webvpn:
    patch:
      parameters:
      - description: modify user
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/user.ModifyModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: modify current user profiles
      tags:
      - User
  /users/me/floors:
    get:
      parameters:
      - default: 0
        description: offset of object array
        in: query
        minimum: 0
        name: offset
        type: integer
      - default: id
        description: SQL ORDER BY field
        enum:
        - id
        - like
        in: query
        name: order_by
        type: string
      - default: 30
        description: length of object array
        in: query
        maximum: 50
        minimum: 0
        name: size
        type: integer
      - default: asc
        description: Sort order
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Floor'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.MessageModel'
      summary: List User's Reply Floors
      tags:
      - Floor
  /users/me/holes:
    get:
      parameters:
      - description: updated time < offset (default is now)
        in: query
        name: offset
        type: string
      - in: query
        name: order
        type: string
      - default: 10
        in: query
        maximum: 10
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Hole'
            type: array
      summary: List a Hole Created By User
      tags:
      - Hole
  /users/me/punishments:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Punishment'
            type: array
      summary: List my punishments
      tags:
      - Penalty
  /users/subscription:
    delete:
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/subscription.DeleteModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/subscription.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/subscription.Response'
      summary: Delete A Subscription
      tags:
      - Subscription
  /users/subscriptions:
    get:
      parameters:
      - default: false
        in: query
        name: plain
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Hole'
            type: array
      summary: List User's Subscriptions
      tags:
      - Subscription
    post:
      consumes:
      - application/json
      parameters:
      - description: json
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/subscription.AddModel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/subscription.Response'
      summary: Add A Subscription
      tags:
      - Subscription
swagger: "2.0"
