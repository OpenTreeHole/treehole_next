// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Maintainer Ke Chen",
            "email": "dev@fduhole.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/config/search": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "change search config",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/floor.SearchConfigModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Map"
                        }
                    }
                }
            }
        },
        "/divisions": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Division"
                ],
                "summary": "List All Divisions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Division"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Division"
                ],
                "summary": "Add A Division",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/division.CreateModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Division"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Division"
                        }
                    }
                }
            }
        },
        "/divisions/{division_id}/holes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "List Holes In A Division",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "division_id",
                        "name": "division_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "updated time \u003c offset (default is now)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "default": 10,
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Hole"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a hole, create tags and floor binding to it and set the name mapping",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Create A Hole",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "division id",
                        "name": "division_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hole.CreateModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Hole"
                        }
                    }
                }
            }
        },
        "/divisions/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Division"
                ],
                "summary": "Get Division",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Division"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Division"
                ],
                "summary": "Modify A Division",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/division.ModifyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Division"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a division and move all of its holes to another given division",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Division"
                ],
                "summary": "Delete A Division",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/division.DeleteModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/floors": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Old API for Listing Floors",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "integer",
                        "name": "hole_id",
                        "in": "query"
                    },
                    {
                        "maximum": 50,
                        "minimum": 0,
                        "type": "integer",
                        "name": "length",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "s",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "start_floor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Floor"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Old API for Creating A Floor",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/floor.CreateOldModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/floor.CreateOldResponse"
                        }
                    }
                }
            }
        },
        "/floors/search": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "SearchFloors In ElasticSearch",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Floor"
                            }
                        }
                    }
                }
            }
        },
        "/floors/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Get A Floor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "put": {
                "description": "when both \"fold_v2\" and \"fold\" are empty, reset fold; else, \"fold_v2\" has the priority",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Modify A Floor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/floor.ModifyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Delete A Floor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/floor.DeleteModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/floors/{id}/history": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Get A Floor's History, admin only",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FloorHistory"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/floors/{id}/like/{like}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Modify A Floor's like",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "1 is like, 0 is reset, -1 is dislike",
                        "name": "like",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/floors/{id}/restore/{floor_history_id}": {
            "post": {
                "description": "Restore A Floor From A History Version",
                "tags": [
                    "Floor"
                ],
                "summary": "Restore A Floor, admin only",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "floor_history_id",
                        "name": "floor_history_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/floor.RestoreModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/holes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Old API for Listing Holes",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "integer",
                        "name": "division_id",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "default": 10,
                        "name": "length",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "tag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Hole"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Old API for Creating A Hole",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hole.CreateOldModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/hole.CreateOldResponse"
                        }
                    }
                }
            }
        },
        "/holes/{hole_id}/floors": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "List Floors In A Hole",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hole id",
                        "name": "hole_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "offset of object array",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "id",
                        "description": "SQL ORDER BY field",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "like"
                        ],
                        "type": "string",
                        "default": "id",
                        "description": "SQL ORDER BY field",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "maximum": 50,
                        "minimum": 0,
                        "type": "integer",
                        "default": 30,
                        "description": "length of object array",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Floor"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Floor"
                ],
                "summary": "Create A Floor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "hole id",
                        "name": "hole_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/floor.CreateModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Floor"
                        }
                    }
                }
            }
        },
        "/holes/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Get A Hole",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Hole"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Modify A Hole",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hole.ModifyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Hole"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Hide a hole, but visible to admins. This may affect many floors, DO NOT ABUSE!!!",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Delete A Hole",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "patch": {
                "description": "Add hole.view",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "Patch A Hole",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/penalty/{floor_id}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Penalty"
                ],
                "summary": "[Deprecated] Ban publisher of a floor",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/penalty.PostBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Hole"
                        }
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "List All Reports",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "offset of object array",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "id",
                        "description": "SQL ORDER BY field",
                        "name": "orderBy",
                        "in": "query"
                    },
                    {
                        "maximum": 50,
                        "minimum": 0,
                        "type": "integer",
                        "default": 30,
                        "description": "length of object array",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Sort order, default is desc",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Report"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a report and send notification to admins",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Add a report",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/report.AddModel"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HttpError"
                        }
                    }
                }
            }
        },
        "/reports/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Get A Report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Report"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Mark a report as \"dealt\" and send notification to reporter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Report"
                ],
                "summary": "Deal a report",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/report.DeleteModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Report"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HttpError"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "List All Tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search tag by name",
                        "name": "s",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tag"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Create A Tag",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tag.CreateModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Get A Tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Modify A Tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tag.ModifyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a tag and link all of its holes to another given tag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Delete A Tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tag.DeleteModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/tags/{tag_name}/holes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hole"
                ],
                "summary": "List Holes By Tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "tag_name",
                        "name": "tag_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "updated time \u003c offset (default is now)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "type": "integer",
                        "default": 10,
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Hole"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.MessageModel"
                        }
                    }
                }
            }
        },
        "/user/favorites": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "List User's Favorites",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": false,
                        "name": "plain",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Hole"
                            }
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "Modify User's Favorites",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/favourite.ModifyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/favourite.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/favourite.Response"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "Add A Favorite",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/favourite.AddModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/favourite.Response"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/favourite.Response"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "Delete A Favorite",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/favourite.DeleteModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/favourite.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/favourite.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "division.CreateModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "division.DeleteModel": {
            "type": "object",
            "properties": {
                "to": {
                    "description": "Admin only\nID of the target division that all the deleted division's holes will be moved to",
                    "type": "integer",
                    "default": 1
                }
            }
        },
        "division.ModifyModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pinned": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "favourite.AddModel": {
            "type": "object",
            "properties": {
                "hole_id": {
                    "type": "integer"
                }
            }
        },
        "favourite.DeleteModel": {
            "type": "object",
            "properties": {
                "hole_id": {
                    "type": "integer"
                }
            }
        },
        "favourite.ModifyModel": {
            "type": "object",
            "properties": {
                "hole_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "favourite.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "floor.CreateModel": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "reply_to": {
                    "description": "id of the floor to which replied",
                    "type": "integer",
                    "minimum": 0
                },
                "special_tag": {
                    "description": "Admin and Operator only",
                    "type": "string",
                    "maxLength": 16
                }
            }
        },
        "floor.CreateOldModel": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "hole_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "reply_to": {
                    "description": "id of the floor to which replied",
                    "type": "integer",
                    "minimum": 0
                },
                "special_tag": {
                    "description": "Admin and Operator only",
                    "type": "string",
                    "maxLength": 16
                }
            }
        },
        "floor.CreateOldResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Floor"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "floor.DeleteModel": {
            "type": "object",
            "properties": {
                "delete_reason": {
                    "type": "string",
                    "maxLength": 32
                }
            }
        },
        "floor.ModifyModel": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Owner or admin, the original content should be moved to  floor_history",
                    "type": "string"
                },
                "fold": {
                    "description": "Admin and operator only, string array, for version 1: danxi app",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fold_v2": {
                    "description": "Admin and operator only, only string, for version 2",
                    "type": "string",
                    "maxLength": 64
                },
                "like": {
                    "description": "All user, deprecated, \"add\" is like, \"cancel\" is reset",
                    "type": "string",
                    "enum": [
                        "add",
                        "cancel"
                    ]
                },
                "special_tag": {
                    "description": "Admin and Operator only",
                    "type": "string",
                    "maxLength": 16
                }
            }
        },
        "floor.RestoreModel": {
            "type": "object",
            "required": [
                "restore_reason"
            ],
            "properties": {
                "restore_reason": {
                    "type": "string",
                    "maxLength": 32
                }
            }
        },
        "floor.SearchConfigModel": {
            "type": "object",
            "properties": {
                "open": {
                    "type": "boolean"
                }
            }
        },
        "hole.CreateModel": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "special_tag": {
                    "description": "Admin and Operator only",
                    "type": "string",
                    "maxLength": 16
                },
                "tags": {
                    "description": "All users",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tag.CreateModel"
                    }
                }
            }
        },
        "hole.CreateOldModel": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "division_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "special_tag": {
                    "description": "Admin and Operator only",
                    "type": "string",
                    "maxLength": 16
                },
                "tags": {
                    "description": "All users",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tag.CreateModel"
                    }
                }
            }
        },
        "hole.CreateOldResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Hole"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "hole.ModifyModel": {
            "type": "object",
            "properties": {
                "division_id": {
                    "description": "Admin and owner only",
                    "type": "integer",
                    "minimum": 1
                },
                "tags": {
                    "description": "All users",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tag.CreateModel"
                    }
                },
                "unhidden": {
                    "type": "boolean"
                }
            }
        },
        "models.Division": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "division_id": {
                    "description": "/ generated field",
                    "type": "integer"
                },
                "id": {
                    "description": "/ saved fields",
                    "type": "integer"
                },
                "name": {
                    "description": "/ base info",
                    "type": "string"
                },
                "pinned": {
                    "description": "return pinned hole to frontend",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Hole"
                    }
                },
                "time_created": {
                    "type": "string"
                },
                "time_updated": {
                    "type": "string"
                }
            }
        },
        "models.Floor": {
            "type": "object",
            "properties": {
                "anonyname": {
                    "description": "a random username",
                    "type": "string"
                },
                "content": {
                    "description": "content of the floor, no more than 15000",
                    "type": "string"
                },
                "deleted": {
                    "description": "whether the floor is deleted",
                    "type": "boolean"
                },
                "dislike": {
                    "description": "dislike number",
                    "type": "integer"
                },
                "disliked": {
                    "description": "whether the user has disliked the floor",
                    "type": "boolean"
                },
                "floor_id": {
                    "description": "old version compatibility",
                    "type": "integer"
                },
                "fold": {
                    "description": "fold reason, for v1",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fold_v2": {
                    "description": "fold reason",
                    "type": "string"
                },
                "hole_id": {
                    "description": "the hole it belongs to",
                    "type": "integer"
                },
                "id": {
                    "description": "/ saved fields",
                    "type": "integer"
                },
                "is_me": {
                    "description": "whether the user is the author of the floor",
                    "type": "boolean"
                },
                "like": {
                    "description": "like number",
                    "type": "integer"
                },
                "liked": {
                    "description": "whether the user has liked the floor",
                    "type": "boolean"
                },
                "mention": {
                    "description": "many to many mentions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Floor"
                    }
                },
                "modified": {
                    "description": "the modification times of floor.content",
                    "type": "integer"
                },
                "ranking": {
                    "description": "the ranking of this floor in the hole",
                    "type": "integer"
                },
                "reply_to": {
                    "description": "floor_id that it replies to, for dialog mode, in the same hole",
                    "type": "integer"
                },
                "special_tag": {
                    "description": "additional info, like \"树洞管理团队\"",
                    "type": "string"
                },
                "time_created": {
                    "type": "string"
                },
                "time_updated": {
                    "type": "string"
                }
            }
        },
        "models.FloorHistory": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "floor_id": {
                    "type": "integer"
                },
                "id": {
                    "description": "/ base info",
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "time_created": {
                    "type": "string"
                },
                "time_updated": {
                    "type": "string"
                },
                "user_id": {
                    "description": "The one who modified the floor",
                    "type": "integer"
                }
            }
        },
        "models.Hole": {
            "type": "object",
            "properties": {
                "division_id": {
                    "description": "所属 division 的 id",
                    "type": "integer"
                },
                "floors": {
                    "description": "返回给前端的楼层列表，包括首楼、尾楼和预加载的前 n 个楼层",
                    "type": "object",
                    "properties": {
                        "first_floor": {
                            "description": "首楼",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Floor"
                                }
                            ]
                        },
                        "last_floor": {
                            "description": "尾楼",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Floor"
                                }
                            ]
                        },
                        "prefetch": {
                            "description": "预加载的楼层",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Floor"
                            }
                        }
                    }
                },
                "hidden": {
                    "description": "是否隐藏，隐藏的洞用户不可见，管理员可见",
                    "type": "boolean"
                },
                "hole_id": {
                    "description": "兼容旧版 id",
                    "type": "integer"
                },
                "id": {
                    "description": "/ saved fields",
                    "type": "integer"
                },
                "reply": {
                    "description": "回复量（即该洞下 floor 的数量 - 1）",
                    "type": "integer"
                },
                "tags": {
                    "description": "tag 列表；不超过 10 个",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "time_created": {
                    "type": "string"
                },
                "time_updated": {
                    "type": "string"
                },
                "view": {
                    "description": "浏览量",
                    "type": "integer"
                }
            }
        },
        "models.Map": {
            "type": "object",
            "additionalProperties": true
        },
        "models.MessageModel": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Report": {
            "type": "object",
            "properties": {
                "dealt": {
                    "description": "the report has been dealt",
                    "type": "boolean"
                },
                "dealt_by": {
                    "description": "who dealt the report",
                    "type": "integer"
                },
                "floor": {
                    "$ref": "#/definitions/models.Floor"
                },
                "floor_id": {
                    "type": "integer"
                },
                "hole_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string"
                },
                "report_id": {
                    "type": "integer"
                },
                "result": {
                    "description": "deal result",
                    "type": "string"
                },
                "time_created": {
                    "type": "string"
                },
                "time_updated": {
                    "type": "string"
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "/ saved fields",
                    "type": "integer"
                },
                "name": {
                    "description": "/ base info",
                    "type": "string"
                },
                "tag_id": {
                    "description": "/ generated field",
                    "type": "integer"
                },
                "temperature": {
                    "type": "integer"
                }
            }
        },
        "penalty.PostBody": {
            "type": "object",
            "properties": {
                "division_id": {
                    "type": "integer"
                },
                "penalty_level": {
                    "type": "integer"
                }
            }
        },
        "report.AddModel": {
            "type": "object",
            "required": [
                "floor_id",
                "reason"
            ],
            "properties": {
                "floor_id": {
                    "type": "integer"
                },
                "reason": {
                    "type": "string",
                    "maxLength": 128
                }
            }
        },
        "report.DeleteModel": {
            "type": "object",
            "required": [
                "result"
            ],
            "properties": {
                "result": {
                    "description": "The deal result, send it to reporter",
                    "type": "string",
                    "maxLength": 128
                }
            }
        },
        "report.Range": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "RangeNotDealt",
                "RangeDealt",
                "RangeAll"
            ]
        },
        "tag.CreateModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Admin only",
                    "type": "string"
                }
            }
        },
        "tag.DeleteModel": {
            "type": "object",
            "properties": {
                "to": {
                    "description": "Admin only\nName of the target tag that all the deleted tag's holes will be connected to",
                    "type": "string"
                }
            }
        },
        "tag.ModifyModel": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Admin only",
                    "type": "string"
                },
                "temperature": {
                    "description": "Admin only",
                    "type": "integer"
                }
            }
        },
        "utils.ErrorDetailElement": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "utils.HttpError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.ErrorDetailElement"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Open Tree Hole",
	Description:      "An Anonymous BBS \\n Note: PUT methods are used to PARTLY update, and we don't use PATCH method.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
